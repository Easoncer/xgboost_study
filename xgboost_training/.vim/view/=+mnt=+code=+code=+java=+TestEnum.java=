let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
inoremap <buffer> <silent> <BS> =AutoPairsDelete()
nmap <buffer> <silent>  jI <Plug>(JavaComplete-Imports-AddMissing)
nmap <buffer> <silent>  jR <Plug>(JavaComplete-Imports-RemoveUnused)
nmap <buffer> <silent>  ji <Plug>(JavaComplete-Imports-AddSmart)
nmap <buffer> <silent>  jii <Plug>(JavaComplete-Imports-Add)
nmap <buffer> <silent>  jM <Plug>(JavaComplete-Generate-AbstractMethods)
nmap <buffer> <silent>  jA <Plug>(JavaComplete-Generate-Accessors)
nmap <buffer> <silent>  js <Plug>(JavaComplete-Generate-AccessorSetter)
nmap <buffer> <silent>  jg <Plug>(JavaComplete-Generate-AccessorGetter)
nmap <buffer> <silent>  ja <Plug>(JavaComplete-Generate-AccessorSetterGetter)
nmap <buffer> <silent>  jts <Plug>(JavaComplete-Generate-ToString)
nmap <buffer> <silent>  jeq <Plug>(JavaComplete-Generate-EqualsAndHashCode)
nmap <buffer> <silent>  jc <Plug>(JavaComplete-Generate-Constructor)
nmap <buffer> <silent>  jcc <Plug>(JavaComplete-Generate-DefaultConstructor)
vmap <buffer> <silent>  js <Plug>(JavaComplete-Generate-AccessorSetter)
vmap <buffer> <silent>  jg <Plug>(JavaComplete-Generate-AccessorGetter)
vmap <buffer> <silent>  ja <Plug>(JavaComplete-Generate-AccessorSetterGetter)
inoremap <buffer> <silent> Ã® :call AutoPairsJump()a
inoremap <buffer> <silent> <expr> Ã° AutoPairsToggle()
inoremap <buffer> <silent> Ã¢ =AutoPairsBackInsert()
inoremap <buffer> <silent> Ã¥ =AutoPairsFastWrap()
imap <buffer> <silent> <NL>I <Plug>(JavaComplete-Imports-AddMissing)
imap <buffer> <silent> <NL>R <Plug>(JavaComplete-Imports-RemoveUnused)
imap <buffer> <silent> <NL>i <Plug>(JavaComplete-Imports-AddSmart)
imap <buffer> <silent> <NL>ii <Plug>(JavaComplete-Imports-Add)
imap <buffer> <silent> <NL>jM <Plug>(JavaComplete-Generate-AbstractMethods)
imap <buffer> <silent> <NL>s <Plug>(JavaComplete-Generate-AccessorSetter)
imap <buffer> <silent> <NL>g <Plug>(JavaComplete-Generate-AccessorGetter)
imap <buffer> <silent> <NL>a <Plug>(JavaComplete-Generate-AccessorSetterGetter)
inoremap <buffer> <silent>   =AutoPairsSpace()
inoremap <buffer> <silent> " =AutoPairsInsert('"')
inoremap <buffer> <silent> ' =AutoPairsInsert('''')
inoremap <buffer> <silent> ( =AutoPairsInsert('(')
inoremap <buffer> <silent> ) =AutoPairsInsert(')')
noremap <buffer> <silent> Ã® :call AutoPairsJump()
noremap <buffer> <silent> Ã° :call AutoPairsToggle()
inoremap <buffer> <silent> [ =AutoPairsInsert('[')
inoremap <buffer> <silent> ] =AutoPairsInsert(']')
inoremap <buffer> <silent> ` =AutoPairsInsert('`')
inoremap <buffer> <silent> { =AutoPairsInsert('{')
inoremap <buffer> <silent> } =AutoPairsInsert('}')
inoreabbr <buffer> log log=eclim#java#logging#LoggingInit("log")
inoreabbr <buffer> logger logger=eclim#java#logging#LoggingInit("logger")
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal noautoindent
setlocal backupcopy=
setlocal balloonexpr=
setlocal nobinary
setlocal nobreakindent
setlocal breakindentopt=
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=j1
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:*\ -,mO:*\ \ ,exO:*/,s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=//%s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=inc
setlocal conceallevel=1
setlocal completefunc=youcompleteme#Complete
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'java'
setlocal filetype=java
endif
setlocal fixendofline
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=3
setlocal foldmarker={{{,}}}
setlocal foldmethod=indent
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=substitute(v:fname,'\\.','/','g')
setlocal indentexpr=GetJavaIndent()
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e,0=extends,0=implements
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
setlocal lispwords=
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=bin,octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal relativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%!Pl#Statusline(0,1)
setlocal suffixesadd=.java
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'java'
setlocal syntax=java
endif
setlocal tabstop=4
setlocal tagcase=
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal noundofile
setlocal undolevels=-123456
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal nowrap
setlocal wrapmargin=0
4
normal! zo
5
normal! zo
15
normal! zo
let s:l = 10 - ((9 * winheight(0) + 15) / 30)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
10
normal! 019|
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
